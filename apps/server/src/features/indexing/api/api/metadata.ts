import type { MetadataCoordinator } from '../../../metadata/coordinators/MetadataCoordinator.js';

export interface MetadataApi {
  indexAllMetadataEntities: MetadataCoordinator['indexAllMetadataEntities'];
  addTask: MetadataCoordinator['addTask'];
  getTask: MetadataCoordinator['getTask'];
  updateTask: MetadataCoordinator['updateTask'];
  deleteTask: MetadataCoordinator['deleteTask'];
  searchTasks: MetadataCoordinator['searchTasks'];
  listTasks: MetadataCoordinator['listTasks'];
  searchTasksSummary: MetadataCoordinator['searchTasksSummary'];
  getTaskTree: MetadataCoordinator['getTaskTree'];
  getTaskTreeSummary: MetadataCoordinator['getTaskTreeSummary'];
  getSuggestedTasks: MetadataCoordinator['getSuggestedTasks'];
  addTaskDependency: MetadataCoordinator['addTaskDependency'];
  getTaskDependencies: MetadataCoordinator['getTaskDependencies'];
  removeTaskDependency: MetadataCoordinator['removeTaskDependency'];
  removeTaskDependencyByTasks: MetadataCoordinator['removeTaskDependencyByTasks'];
  listTaskDependencies: MetadataCoordinator['listTaskDependencies'];
  addNote: MetadataCoordinator['addNote'];
  getNote: MetadataCoordinator['getNote'];
  updateNote: MetadataCoordinator['updateNote'];
  deleteNote: MetadataCoordinator['deleteNote'];
  searchNotes: MetadataCoordinator['searchNotes'];
  listNotes: MetadataCoordinator['listNotes'];
  getNoteTree: MetadataCoordinator['getNoteTree'];
  getNoteTreeSummary: MetadataCoordinator['getNoteTreeSummary'];
  addRule: MetadataCoordinator['addRule'];
  getRule: MetadataCoordinator['getRule'];
  updateRule: MetadataCoordinator['updateRule'];
  deleteRule: MetadataCoordinator['deleteRule'];
  searchRules: MetadataCoordinator['searchRules'];
  listRules: MetadataCoordinator['listRules'];
  getRulesByIds: MetadataCoordinator['getRulesByIds'];
  getRuleTree: MetadataCoordinator['getRuleTree'];
  applyRule: MetadataCoordinator['applyRule'];
  getRuleAnalytics: MetadataCoordinator['getRuleAnalytics'];
  trackRuleApplication: MetadataCoordinator['trackRuleApplication'];
  getStats: MetadataCoordinator['getStats'];
  resolveDocumentationLinks: MetadataCoordinator['resolveDocumentationLinks'];
  getRulesApplicable: MetadataCoordinator['getRulesApplicable'];
  suggestNextTasks: MetadataCoordinator['suggestNextTasks'];
  addChecklist: MetadataCoordinator['addChecklist'];
  toggleChecklistItem: MetadataCoordinator['toggleChecklistItem'];
  exportIndex: MetadataCoordinator['exportIndex'];
  getServices: MetadataCoordinator['getServices'];
}

export function attachMetadataApi(target: any, coordinator: MetadataCoordinator): void {
  target.indexAllMetadataEntities = coordinator.indexAllMetadataEntities.bind(coordinator);
  target.addTask = coordinator.addTask.bind(coordinator);
  target.getTask = coordinator.getTask.bind(coordinator);
  target.updateTask = coordinator.updateTask.bind(coordinator);
  target.deleteTask = coordinator.deleteTask.bind(coordinator);
  target.searchTasks = coordinator.searchTasks.bind(coordinator);
  target.listTasks = coordinator.listTasks.bind(coordinator);
  target.searchTasksSummary = coordinator.searchTasksSummary.bind(coordinator);
  target.getTaskTree = coordinator.getTaskTree.bind(coordinator);
  target.getTaskTreeSummary = coordinator.getTaskTreeSummary.bind(coordinator);
  target.getSuggestedTasks = coordinator.getSuggestedTasks.bind(coordinator);
  target.addTaskDependency = coordinator.addTaskDependency.bind(coordinator);
  target.getTaskDependencies = coordinator.getTaskDependencies.bind(coordinator);
  target.removeTaskDependency = coordinator.removeTaskDependency.bind(coordinator);
  target.removeTaskDependencyByTasks = coordinator.removeTaskDependencyByTasks.bind(coordinator);
  target.listTaskDependencies = coordinator.listTaskDependencies.bind(coordinator);
  target.addNote = coordinator.addNote.bind(coordinator);
  target.getNote = coordinator.getNote.bind(coordinator);
  target.updateNote = coordinator.updateNote.bind(coordinator);
  target.deleteNote = coordinator.deleteNote.bind(coordinator);
  target.searchNotes = coordinator.searchNotes.bind(coordinator);
  target.listNotes = coordinator.listNotes.bind(coordinator);
  target.getNoteTree = coordinator.getNoteTree.bind(coordinator);
  target.getNoteTreeSummary = coordinator.getNoteTreeSummary.bind(coordinator);
  target.addRule = coordinator.addRule.bind(coordinator);
  target.getRule = coordinator.getRule.bind(coordinator);
  target.updateRule = coordinator.updateRule.bind(coordinator);
  target.deleteRule = coordinator.deleteRule.bind(coordinator);
  target.searchRules = coordinator.searchRules.bind(coordinator);
  target.listRules = coordinator.listRules.bind(coordinator);
  target.getRulesByIds = coordinator.getRulesByIds.bind(coordinator);
  target.getRuleTree = coordinator.getRuleTree.bind(coordinator);
  target.applyRule = coordinator.applyRule.bind(coordinator);
  target.getRuleAnalytics = coordinator.getRuleAnalytics.bind(coordinator);
  target.trackRuleApplication = coordinator.trackRuleApplication.bind(coordinator);
  target.getStats = coordinator.getStats.bind(coordinator);
  target.resolveDocumentationLinks = coordinator.resolveDocumentationLinks.bind(coordinator);
  target.getRulesApplicable = coordinator.getRulesApplicable.bind(coordinator);
  target.suggestNextTasks = coordinator.suggestNextTasks.bind(coordinator);
  target.addChecklist = coordinator.addChecklist.bind(coordinator);
  target.toggleChecklistItem = coordinator.toggleChecklistItem.bind(coordinator);
  target.exportIndex = coordinator.exportIndex.bind(coordinator);
  target.getServices = coordinator.getServices.bind(coordinator);
}
