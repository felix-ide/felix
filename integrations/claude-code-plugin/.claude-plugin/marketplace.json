{
  "name": "felix",
  "display_name": "Felix Code Intelligence",
  "version": "1.0.0",
  "description": "Complete code intelligence, task management, and workflow automation for your projects. Includes semantic search, component context, task workflows with validation, documentation system, and coding rules.",
  "author": "Felix Team",
  "homepage": "https://github.com/epoplive/felix",
  "repository": "https://github.com/epoplive/felix",
  "license": "MIT",
  "category": "productivity",
  "tags": [
    "code-intelligence",
    "task-management",
    "workflows",
    "documentation",
    "rules",
    "productivity"
  ],
  "icon": "ðŸ§ ",
  "screenshots": [],
  "requirements": {
    "node": ">=18.0.0",
    "platform": ["darwin", "linux", "win32"]
  },
  "mcp_servers": {
    "felix": {
      "type": "node",
      "command": "npx",
      "args": ["-y", "@felix/mcp-server"],
      "env": {
        "FELIX_PROJECT_PATH": "{{project_root}}",
        "FELIX_SERVER_URL": "http://localhost:9000"
      },
      "description": "Felix MCP server providing code intelligence and task management tools",
      "tools": [
        "mcp__felix__search",
        "mcp__felix__context",
        "mcp__felix__tasks",
        "mcp__felix__workflows",
        "mcp__felix__notes",
        "mcp__felix__rules",
        "mcp__felix__checklists",
        "mcp__felix__projects",
        "mcp__felix__degradation"
      ]
    }
  },
  "hooks": {
    "UserPromptSubmit": {
      "matcher": "*",
      "type": "command",
      "command": "bash",
      "args": ["{{plugin_dir}}/hooks/felix-user-prompt-submit.sh"],
      "description": "Inject relevant coding rules and context when submitting prompts"
    },
    "PreToolUse": {
      "matcher": "Edit|Write|MultiEdit|NotebookEdit",
      "type": "command",
      "command": "bash",
      "args": ["{{plugin_dir}}/hooks/felix-pre-tool-use.sh"],
      "description": "Validate code changes against rules before execution"
    },
    "PostToolUse": {
      "matcher": "Edit|Write|MultiEdit|NotebookEdit|Task",
      "type": "command",
      "command": "bash",
      "args": ["{{plugin_dir}}/hooks/felix-post-tool-use.sh"],
      "description": "Analyze and track code patterns after successful operations"
    }
  },
  "configuration": {
    "server_url": {
      "type": "string",
      "default": "http://localhost:9000",
      "description": "Felix server URL",
      "required": false
    },
    "debug_mode": {
      "type": "boolean",
      "default": false,
      "description": "Enable debug logging for hooks",
      "required": false
    },
    "auto_index": {
      "type": "boolean",
      "default": true,
      "description": "Automatically index projects when Felix connects",
      "required": false
    }
  },
  "installation": {
    "pre_install": [],
    "post_install": [
      {
        "type": "message",
        "content": "Felix plugin installed! Make sure the Felix server is running: npm run dev"
      },
      {
        "type": "health_check",
        "url": "{{config.server_url}}/api/health",
        "timeout": 5000
      }
    ]
  },
  "features": [
    {
      "name": "Semantic Code Search",
      "description": "Search your entire codebase using natural language queries"
    },
    {
      "name": "Component Context",
      "description": "Get full context for any code component with relationships and dependencies"
    },
    {
      "name": "Task Workflows",
      "description": "Manage tasks with validation bundles, status flows, and transition gates"
    },
    {
      "name": "Documentation System",
      "description": "Create rich documentation with markdown, mermaid diagrams, and excalidraw"
    },
    {
      "name": "Coding Rules",
      "description": "Define and enforce coding standards, patterns, and constraints"
    },
    {
      "name": "Rule Validation",
      "description": "Automatic validation of code changes against project rules"
    },
    {
      "name": "Pattern Learning",
      "description": "Learn from successful patterns to improve suggestions over time"
    }
  ],
  "workflows": [
    {
      "name": "Feature Development",
      "description": "Epic â†’ Story â†’ Task hierarchy with comprehensive spec gates"
    },
    {
      "name": "Bug Fix",
      "description": "Structured bug fixing with root cause analysis"
    },
    {
      "name": "Research",
      "description": "Research tasks with documentation and findings tracking"
    }
  ]
}
